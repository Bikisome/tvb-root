<Lems description="Epileptor 2-D (phase plane) oscillator.">

    <ComponentType name="derivatives">

        <!-- If empty then none -->
        <Constant name="a" dimension="None" value="1.0" description="Coefficient of the cubic term in the first state-variable."/>
        <Constant name="b" dimension="None" value="3.0" description="Coefficient of the squared term in the first state-variable."/>
        <Constant name="c" dimension="None" value="1.0" description="Additive coefficient for the second state-variable x_{2}, called :math:`y_{0}` in Jirsa paper."/>
        <Constant name="d" dimension="None" value="5.0" description="Coefficient of the squared term in the second state-variable x_{2}."/>
        <Constant name="r" dimension="lo=0.0, hi=0.001, step=0.00005" value="0.00035" description="Temporal scaling in the slow state-variable, called :math:`1\\tau_{0}` in Jirsa paper (see class Epileptor)."/>
        <Constant name="s" dimension="None" value="4.0" description="Linear coefficient in the third state variable"/>
        <Constant name="x0" dimension="lo=-3.0, hi=-1.0, step=0.1" value="-1.6" description="Epileptogenicity parameter."/>
        <Constant name="Iext" dimension="lo=1.5, hi=5.0, step=0.1" value="3.1" description="External input current to the first state-variable."/>
        <Constant name="slope" dimension="lo=-16.0, hi=6.0, step=0.1" value="0." description="Linear coefficient in the first state-variable."/>
        <Constant name="Iext2" dimension="lo=0.0, hi=1.0, step=0.05" value="0.45" description="External input current to the first state-variable."/>
        <Constant name="tau" dimension="None" value="10.0" description="Temporal scaling coefficient in fifth state variable."/>
        <Constant name="aa" dimension="None" value="6.0" description="Linear coefficient in fifth state variable."/>
        <Constant name="bb" dimension="None" value="2.0" description="Linear coefficient of lowpass excitatory coupling in fourth state variable."/>
        <Constant name="Kvf" dimension="lo=0.0, hi=4.0, step=0.5" value="0.0" description="Coupling scaling on a very fast time scale."/>
        <Constant name="Kf" dimension="lo=0.0, hi=4.0, step=0.5" value="0.0" description="Correspond to the coupling scaling on a fast time scale."/>
        <Constant name="Ks" dimension="lo=-4.0, hi=4.0, step=0.1" value="0.0" description="Permittivity coupling, that is from the fast time scale toward the slow time scale."/>
        <Constant name="tt" dimension="lo=0.001, hi=10.0, step=0.001" value="1.0" description="Time scaling of the whole system to the system in real time."/>
        <Constant name="modification" dimension="None" value="False" description="When modification is True, then use nonlinear influence on z. The default value is False, i.e., linear influence."/>

        <!-- Exposures are used for observables, for the name enter variable to be observed (usually states)
        and for dimension enter the reduction functionality. Will be represented as variables_of_interest.
        Choices and default list with a (,) separator-->
        <Exposure name="x1" dimension=""/>
        <Exposure name="y1" dimension=""/>
        <Exposure name="z" dimension=""/>
        <Exposure name="x2" dimension=""/>
        <Exposure name="y2" dimension=""/>
        <Exposure name="g" dimension=""/>
        <Exposure name="x2 - x1" dimension=""/>

        <Dynamics>
            <!-- "State variable ranges [lo, hi]" values are entered with keyword "default" -->
            <!-- For each state variable a set of boundaries can be added to encompass the boundaries of the dynamic range -->
            <!-- Leave empty "" for no boundaries. Set None for one-sided boundaries, i.e. "1.0, None" -->
            <StateVariable name="x1" dimension="-2., 1." />
            <StateVariable name="y1" dimension="-20., 2." />
            <StateVariable name="z" dimension="2.0, 5.0" />
            <StateVariable name="x2" dimension="-2., 0." />
            <StateVariable name="y2" dimension="0., 2." />
            <StateVariable name="g" dimension="-1, 1." />

            <!-- Derived variables can be used to simplify the time derivatives, enter the local coupling formulas or any formula -->
            <!-- syntax: [name]=[expression] -->
            <!-- Define for ex. global and local coupling: c_0 = coupling[0, ] and lc_0 = local_coupling -->
            <DerivedVariable name="c_pop1" value="coupling[0]"/>
            <DerivedVariable name="c_pop2" value="coupling[1]"/>
            <DerivedVariable name="Iext" value="Iext + local_coupling * x1"/>

                        <!-- For conditionals use &lt(=); or &gt;(=) for less- or greater then (equal to). Cases are separated with ; -->
            <!-- Population 1 -->
            <ConditionalDerivedVariable name="ydot0">
                <Case condition="x1 &lt; 0.0" value="-a * x1**2 + b * x1"/>
                <Case condition="else" value="slope - x2 + 0.6 * (z - 4)**2"/>
            </ConditionalDerivedVariable>

            <ConditionalDerivedVariable name="ydot2">
                <Case condition="z &lt; 0.0" value="- 0.1 * (z**7)"/>
                <Case condition="else" value="0"/>
            </ConditionalDerivedVariable>

            <ConditionalDerivedVariable name="h">
                <Case condition="modification" value="x0 + 3. / (1. + exp(-(x1 + 0.5) / 0.1))"/>
                <Case condition="else" value="4 * (x1 - x0) + ydot2"/>
            </ConditionalDerivedVariable>

            <ConditionalDerivedVariable name="ydot4">
                <Case condition="x2 &lt; -0.25" value="0.0"/>
                <Case condition="else" value="aa * (x2 + 0.25)"/>
            </ConditionalDerivedVariable>

            <TimeDerivative variable="dx1" value="tt * (y1 - z + Iext + Kvf * c_pop1 + ydot0 * x1)"/>
            <TimeDerivative variable="dy1" value="tt * (c - d * x1**2 - y1)"/>

            <!-- Energy -->
            <TimeDerivative variable="dz" value="tt * (r * (h - z + Ks * c_pop1))"/>

            <!-- Population 2 -->
            <TimeDerivative variable="dx2" value="tt * (-y2 + x2 - x2**3 + Iext2 + bb * g - 0.3 * (z - 3.5) + Kf * c_pop2)"/>
            <TimeDerivative variable="dy2" value="tt * ((-y2 + ydot4) / tau)"/>

            <!-- Filter -->
            <TimeDerivative variable="dg" value="tt * (-0.01 * (g - 0.1 * x1) )"/>

        </Dynamics>

    </ComponentType>
</Lems>